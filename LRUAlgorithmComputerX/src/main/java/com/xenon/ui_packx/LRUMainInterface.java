/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xenon.ui_packx;

import com.xenon.lru_packx.LRUComputationDataHolder;
import com.xenon.lru_packx.LeastRecentlyUsedAlgX;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xenxi
 */
public class LRUMainInterface extends javax.swing.JFrame implements FrameCommunicationInterface, ExitingDialog.ExitCommunicationInterface {

    /**
     * Creates new form LRUMainInterface
     */
    public LRUMainInterface() {
        initUserComponentsSet();
        initComponents();
        lru_TableOfExecution.setDefaultRenderer(String.class, cell_value_centerRenderer);
        lru_TableOfExecution.getTableHeader().setDefaultRenderer(new TableHeaderRenderer());
        setResetButtonState(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        topPanelInputArea = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputReferenceString = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        inputPageFrameCount = new javax.swing.JTextField();
        exitButton = new javax.swing.JLabel();
        btn_clearReferenceStringInput = new javax.swing.JLabel();
        btn_clearPageFrameInput = new javax.swing.JLabel();
        minimizeButton = new javax.swing.JLabel();
        bottomPanelLineborder = new javax.swing.JPanel();
        bottomControlPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        inputPageFaultCount = new javax.swing.JLabel();
        btn_calculate = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        centerPanelForScrollingPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lru_TableOfExecution = new javax.swing.JTable();
        logoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(41, 38, 42));
        jPanel1.setToolTipText(null);

        topPanelInputArea.setBackground(new java.awt.Color(34, 108, 110));
        topPanelInputArea.setForeground(new java.awt.Color(41, 38, 42));
        topPanelInputArea.setToolTipText(null);
        topPanelInputArea.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                topPanelInputAreaMouseDragged(evt);
            }
        });
        topPanelInputArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                topPanelInputAreaMousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 25)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Least Recently Used Algorithm");
        jLabel2.setToolTipText(null);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Reference String");
        jLabel3.setToolTipText(null);

        inputReferenceString.setBackground(new java.awt.Color(46, 45, 53));
        inputReferenceString.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        inputReferenceString.setForeground(new java.awt.Color(0, 224, 255));
        inputReferenceString.setToolTipText(null);
        inputReferenceString.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(34, 108, 110)));
        inputReferenceString.setCaretColor(new java.awt.Color(196, 50, 74));
        inputReferenceString.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        inputReferenceString.setMargin(new java.awt.Insets(2, 10, 2, 10));
        inputReferenceString.setPreferredSize(new java.awt.Dimension(258, 24));
        inputReferenceString.setSelectedTextColor(new java.awt.Color(196, 50, 74));
        inputReferenceString.setSelectionColor(new java.awt.Color(41, 38, 42));
        inputReferenceString.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputReferenceStringFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputReferenceStringFocusLost(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Page Frame");
        jLabel4.setToolTipText(null);

        inputPageFrameCount.setBackground(new java.awt.Color(46, 45, 53));
        inputPageFrameCount.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        inputPageFrameCount.setForeground(new java.awt.Color(0, 224, 255));
        inputPageFrameCount.setToolTipText(null);
        inputPageFrameCount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(34, 108, 110)));
        inputPageFrameCount.setCaretColor(new java.awt.Color(196, 50, 74));
        inputPageFrameCount.setMargin(new java.awt.Insets(2, 5, 2, 5));
        inputPageFrameCount.setPreferredSize(new java.awt.Dimension(258, 24));
        inputPageFrameCount.setSelectedTextColor(new java.awt.Color(196, 50, 74));
        inputPageFrameCount.setSelectionColor(new java.awt.Color(41, 38, 42));
        inputPageFrameCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputPageFrameCountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputPageFrameCountFocusLost(evt);
            }
        });

        exitButton.setBackground(new java.awt.Color(0, 222, 253));
        exitButton.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        exitButton.setForeground(new java.awt.Color(17, 144, 161));
        exitButton.setText("x");
        exitButton.setToolTipText("Close");
        exitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitButtonMouseExited(evt);
            }
        });

        btn_clearReferenceStringInput.setBackground(new java.awt.Color(0, 222, 253));
        btn_clearReferenceStringInput.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btn_clearReferenceStringInput.setForeground(new java.awt.Color(17, 144, 161));
        btn_clearReferenceStringInput.setText("x");
        btn_clearReferenceStringInput.setToolTipText(null);
        btn_clearReferenceStringInput.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_clearReferenceStringInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_clearReferenceStringInputMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_clearReferenceStringInputMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_clearReferenceStringInputMouseExited(evt);
            }
        });

        btn_clearPageFrameInput.setBackground(new java.awt.Color(0, 222, 253));
        btn_clearPageFrameInput.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btn_clearPageFrameInput.setForeground(new java.awt.Color(17, 144, 161));
        btn_clearPageFrameInput.setText("x");
        btn_clearPageFrameInput.setToolTipText(null);
        btn_clearPageFrameInput.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_clearPageFrameInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_clearPageFrameInputMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_clearPageFrameInputMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_clearPageFrameInputMouseExited(evt);
            }
        });

        minimizeButton.setBackground(new java.awt.Color(0, 222, 253));
        minimizeButton.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        minimizeButton.setForeground(new java.awt.Color(17, 144, 161));
        minimizeButton.setText("-");
        minimizeButton.setToolTipText("Minimize");
        minimizeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseExited(evt);
            }
        });

        javax.swing.GroupLayout topPanelInputAreaLayout = new javax.swing.GroupLayout(topPanelInputArea);
        topPanelInputArea.setLayout(topPanelInputAreaLayout);
        topPanelInputAreaLayout.setHorizontalGroup(
            topPanelInputAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelInputAreaLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(topPanelInputAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(topPanelInputAreaLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(inputReferenceString, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_clearReferenceStringInput)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(inputPageFrameCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_clearPageFrameInput)
                        .addGap(6, 6, 6))
                    .addGroup(topPanelInputAreaLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(minimizeButton)
                        .addGap(18, 18, 18)
                        .addComponent(exitButton)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        topPanelInputAreaLayout.setVerticalGroup(
            topPanelInputAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelInputAreaLayout.createSequentialGroup()
                .addGroup(topPanelInputAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelInputAreaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(topPanelInputAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exitButton)
                            .addComponent(minimizeButton)))
                    .addGroup(topPanelInputAreaLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2)))
                .addGap(26, 26, 26)
                .addGroup(topPanelInputAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputReferenceString, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(inputPageFrameCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_clearReferenceStringInput)
                    .addComponent(btn_clearPageFrameInput))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        bottomPanelLineborder.setBackground(new java.awt.Color(34, 108, 110));
        bottomPanelLineborder.setToolTipText(null);

        javax.swing.GroupLayout bottomPanelLineborderLayout = new javax.swing.GroupLayout(bottomPanelLineborder);
        bottomPanelLineborder.setLayout(bottomPanelLineborderLayout);
        bottomPanelLineborderLayout.setHorizontalGroup(
            bottomPanelLineborderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        bottomPanelLineborderLayout.setVerticalGroup(
            bottomPanelLineborderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        bottomControlPanel.setToolTipText(null);
        bottomControlPanel.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 224, 255));
        jLabel1.setText("PAGE FAULT: ");
        jLabel1.setToolTipText(null);

        inputPageFaultCount.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        inputPageFaultCount.setForeground(new java.awt.Color(0, 224, 255));
        inputPageFaultCount.setText("---");

        btn_calculate.setBackground(new java.awt.Color(34, 108, 110));
        btn_calculate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_calculate.setForeground(new java.awt.Color(255, 255, 255));
        btn_calculate.setText("CALCULATE");
        btn_calculate.setToolTipText("Start algorithm simulation");
        btn_calculate.setBorder(null);
        btn_calculate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_calculate.setPreferredSize(new java.awt.Dimension(116, 31));
        btn_calculate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_calculateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_calculateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_calculateMouseExited(evt);
            }
        });

        btn_reset.setBackground(new java.awt.Color(196, 50, 74));
        btn_reset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_reset.setForeground(new java.awt.Color(255, 255, 255));
        btn_reset.setText("RESET");
        btn_reset.setToolTipText("Reset current simulation");
        btn_reset.setBorder(null);
        btn_reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_reset.setPreferredSize(new java.awt.Dimension(116, 31));
        btn_reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_resetMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_resetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_resetMouseExited(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Note: Enter Reference String separated by comma (,). 5-15 items are valid.");
        jLabel5.setToolTipText(null);

        javax.swing.GroupLayout bottomControlPanelLayout = new javax.swing.GroupLayout(bottomControlPanel);
        bottomControlPanel.setLayout(bottomControlPanelLayout);
        bottomControlPanelLayout.setHorizontalGroup(
            bottomControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomControlPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(bottomControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bottomControlPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputPageFaultCount)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_calculate, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        bottomControlPanelLayout.setVerticalGroup(
            bottomControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomControlPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(bottomControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bottomControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_calculate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_reset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bottomControlPanelLayout.createSequentialGroup()
                        .addGroup(bottomControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(inputPageFaultCount))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        centerPanelForScrollingPanel.setBackground(new java.awt.Color(255, 0, 153));
        centerPanelForScrollingPanel.setOpaque(false);

        jScrollPane1.setBackground(new java.awt.Color(255, 153, 0));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 38, 42)));
        jScrollPane1.setToolTipText(null);
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 38, 42)));
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(767, 245));

        DefaultTableCellRenderer cell_renderer = new DefaultTableCellRenderer();
        cell_renderer.setHorizontalAlignment(JLabel.CENTER);
        lru_TableOfExecution.setDefaultRenderer(Object.class, cell_renderer);
        lru_TableOfExecution.setBackground(new java.awt.Color(41, 38, 42));
        lru_TableOfExecution.setColumnSelectionAllowed(true);
        lru_TableOfExecution.setRowSelectionAllowed(false);
        lru_TableOfExecution.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(117, 122, 125), 3, true));
        lru_TableOfExecution.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lru_TableOfExecution.setForeground(new java.awt.Color(255, 255, 255));
        lru_TableOfExecution.setModel(reset_table_model);
        lru_TableOfExecution.setToolTipText(null);
        lru_TableOfExecution.setGridColor(new java.awt.Color(117, 122, 125));
        lru_TableOfExecution.setName(""); // NOI18N
        lru_TableOfExecution.setOpaque(false);
        lru_TableOfExecution.setRowHeight(30);
        lru_TableOfExecution.setSelectionBackground(new java.awt.Color(0, 224, 255));
        lru_TableOfExecution.setSelectionForeground(new java.awt.Color(46, 45, 53));
        lru_TableOfExecution.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lru_TableOfExecution.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lru_TableOfExecution.setShowGrid(true);
        lru_TableOfExecution.getTableHeader().setResizingAllowed(false);
        lru_TableOfExecution.getTableHeader().setReorderingAllowed(false);
        lru_TableOfExecution.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lru_TableOfExecutionFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(lru_TableOfExecution);

        javax.swing.GroupLayout centerPanelForScrollingPanelLayout = new javax.swing.GroupLayout(centerPanelForScrollingPanel);
        centerPanelForScrollingPanel.setLayout(centerPanelForScrollingPanelLayout);
        centerPanelForScrollingPanelLayout.setHorizontalGroup(
            centerPanelForScrollingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerPanelForScrollingPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        centerPanelForScrollingPanelLayout.setVerticalGroup(
            centerPanelForScrollingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerPanelForScrollingPanelLayout.createSequentialGroup()
                .addGap(0, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanelInputArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bottomPanelLineborder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bottomControlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(centerPanelForScrollingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(topPanelInputArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(centerPanelForScrollingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bottomControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bottomPanelLineborder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("LOGO.png")));
        logoLabel.setToolTipText(null);
        logoLabel.setAlignmentY(0.0F);
        logoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(logoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void topPanelInputAreaMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topPanelInputAreaMouseDragged
        //form dragging of undecorated form
        int mouse_coord_X = evt.getXOnScreen();
        int mouse_coord_Y = evt.getYOnScreen();

        this.setLocation(mouse_coord_X - current_mouse_pos_X, mouse_coord_Y - current_mouse_pos_Y);
    }//GEN-LAST:event_topPanelInputAreaMouseDragged

    private void topPanelInputAreaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topPanelInputAreaMousePressed
        current_mouse_pos_X = evt.getX();
        current_mouse_pos_Y = evt.getY();
    }//GEN-LAST:event_topPanelInputAreaMousePressed

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        ExitingDialog diag = new ExitingDialog();
        diag.setNotifier(this);
        diag.setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_exitButtonMouseClicked

    private void exitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseEntered
        // TODO add your handling code here:
        exitButton.setForeground(new Color(0, 222, 253));
    }//GEN-LAST:event_exitButtonMouseEntered

    private void exitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseExited
        exitButton.setForeground(new Color(17, 144, 161));
    }//GEN-LAST:event_exitButtonMouseExited

    private void btn_clearReferenceStringInputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearReferenceStringInputMouseClicked
        inputReferenceString.setText("");
        isReferenceStringValid = false;
        notInReferenceValidRange = true;
        reference_string_length = 0;
    }//GEN-LAST:event_btn_clearReferenceStringInputMouseClicked

    private void btn_clearReferenceStringInputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearReferenceStringInputMouseEntered
        // TODO add your handling code here:
        btn_clearReferenceStringInput.setForeground(new Color(0, 222, 253));
    }//GEN-LAST:event_btn_clearReferenceStringInputMouseEntered

    private void btn_clearReferenceStringInputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearReferenceStringInputMouseExited
        // TODO add your handling code here:
        btn_clearReferenceStringInput.setForeground(new Color(17, 144, 161));
    }//GEN-LAST:event_btn_clearReferenceStringInputMouseExited

    private void btn_clearPageFrameInputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearPageFrameInputMouseClicked
        inputPageFrameCount.setText("");
        isPageFrameValid = false;
    }//GEN-LAST:event_btn_clearPageFrameInputMouseClicked

    private void btn_clearPageFrameInputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearPageFrameInputMouseEntered
        // TODO add your handling code here:
        btn_clearPageFrameInput.setForeground(new Color(0, 222, 253));
    }//GEN-LAST:event_btn_clearPageFrameInputMouseEntered

    private void btn_clearPageFrameInputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearPageFrameInputMouseExited
        btn_clearPageFrameInput.setForeground(new Color(17, 144, 161));
    }//GEN-LAST:event_btn_clearPageFrameInputMouseExited

    private void inputReferenceStringFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputReferenceStringFocusGained
        inputReferenceString.setBorder(textFieldBorderFocused1);
    }//GEN-LAST:event_inputReferenceStringFocusGained

    private void inputPageFrameCountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputPageFrameCountFocusGained
        // TODO add your handling code here:
        inputPageFrameCount.setBorder(textFieldBorderFocused1);
    }//GEN-LAST:event_inputPageFrameCountFocusGained

    private void inputReferenceStringFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputReferenceStringFocusLost
        // TODO add your handling code here:
        inputReferenceString.setBorder(textFieldBorderUnFocused1);
    }//GEN-LAST:event_inputReferenceStringFocusLost

    private void inputPageFrameCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputPageFrameCountFocusLost
        // TODO add your handling code here:
        inputPageFrameCount.setBorder(textFieldBorderUnFocused1);
        getPageFrame();
    }//GEN-LAST:event_inputPageFrameCountFocusLost

    private void minimizeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeButtonMouseClicked
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_minimizeButtonMouseClicked

    private void minimizeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeButtonMouseEntered
        minimizeButton.setForeground(new Color(0, 222, 253));
    }//GEN-LAST:event_minimizeButtonMouseEntered

    private void minimizeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeButtonMouseExited
        minimizeButton.setForeground(new Color(17, 144, 161));
    }//GEN-LAST:event_minimizeButtonMouseExited

    private void lru_TableOfExecutionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lru_TableOfExecutionFocusLost
        lru_TableOfExecution.clearSelection();
    }//GEN-LAST:event_lru_TableOfExecutionFocusLost

    private void btn_calculateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calculateMouseEntered
        btn_calculate.setBackground(new Color(0, 224, 255));
        btn_calculate.setForeground(new Color(46, 45, 53));
    }//GEN-LAST:event_btn_calculateMouseEntered

    private void btn_calculateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calculateMouseExited
        btn_calculate.setBackground(new Color(34, 108, 110));
        btn_calculate.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_btn_calculateMouseExited

    private void btn_resetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_resetMouseEntered
        btn_reset.setBackground(new Color(255, 50, 84));
        //btn_reset.setForeground(new Color(46, 45, 53));
    }//GEN-LAST:event_btn_resetMouseEntered

    private void btn_resetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_resetMouseExited
        btn_reset.setBackground(new Color(196, 50, 74));
        //btn_reset.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_btn_resetMouseExited

    private void btn_resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_resetMouseClicked
        ResetTable();
    }//GEN-LAST:event_btn_resetMouseClicked

    private ArrayList<Integer> getReferenceString() {
        ArrayList<Integer> returnable = new ArrayList<>();
        try {
            if (inputReferenceString.getText().isBlank()) {
                notInReferenceValidRange = false;
                throw new Exception();
            }
            String default_splitting_regex = ",";
            String ref_string = inputReferenceString.getText();
            String[] token = ref_string.split(default_splitting_regex);
            for (String item : token) {
                int to_add = Integer.parseInt(item.trim());
                if (to_add < 0) {
                    //TODO raise negative number error
                    throw new Exception();
                } else {
                    returnable.add(to_add);
                }
            }
            if (returnable.size() < 5 || returnable.size() > 15) {
                //not in min and max
                reference_string_length = returnable.size();
                notInReferenceValidRange = true;
                throw new Exception();
            }
            isReferenceStringValid = true;
        } catch (Exception ignored) {
            isReferenceStringValid = false;
        }
        return returnable;
    }

    private int getPageFrame() {
        try {
            int to_add = Integer.parseInt(inputPageFrameCount.getText().trim());
            if (to_add <= 0) {
                //TODO raise negative number error
                throw new Exception();
            }
            isPageFrameValid = true;
            return to_add;
        } catch (Exception ignored) {
            isPageFrameValid = false;
        }
        return -1;
    }

    private void btn_calculateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calculateMouseClicked
        //TODO implement computation here.
        //TODO input string and page frame.
        ArrayList<Integer> reference_List2 = getReferenceString();
        int page_frame = getPageFrame();

        if (isReferenceStringValid && isPageFrameValid) {
            setResetButtonState(true);
            SetTextFieldBorderColorToUnfocused();
            notInReferenceValidRange = false;
            LeastRecentlyUsedAlgX comp1 = new LeastRecentlyUsedAlgX(reference_List2, page_frame);
            comp1.startLRUCalculate();

            LRUComputationDataHolder dataHolder = comp1.getDataHolder();

            lru_TableOfExecution.setModel(generateTableModel(dataHolder));
            String page_fault = String.valueOf(dataHolder.getPage_Fault_Count());
            inputPageFaultCount.setText(page_fault);
            inputPageFaultCount.setToolTipText(page_fault);
        } else {
            //invalid inputs
            if (notInReferenceValidRange) {
                notInReferenceValidRange = false;
                //ref is only is not valid
                SetTextFieldBorderColorToError(new int[]{1, 0});
                if (reference_string_length > 15) {
                    //more than 15
                    ShowErrorDialog("Max Limit Reached",
                            "The allowable number of items in a reference string is between 5 - 15, but found " + reference_string_length + ".");
                } else if (reference_string_length < 5) {
                    //less than 5
                    ShowErrorDialog("Not Enough Items",
                            "The allowable number of items in a reference string is between 5 - 15, but found " + reference_string_length + ".");
                }
            } else {
                if (!isReferenceStringValid && !isPageFrameValid) {
                    //if both is not valid
                    SetTextFieldBorderColorToError(new int[]{1, 1});
                    ShowErrorDialog("Invalid Input", "Cannot proceed, inputs are invalid.");
                    inputReferenceString.requestFocus();
                } else {
                    if (!isReferenceStringValid) {
                        //ref is only is not valid
                        SetTextFieldBorderColorToError(new int[]{1, 0});
                        ShowErrorDialog("Check Reference String", "Please double check the inputted reference string.");
                        inputReferenceString.requestFocus();
                    } else if (!isPageFrameValid) {
                        //page frame only is not valid
                        SetTextFieldBorderColorToError(new int[]{0, 1});
                        ShowErrorDialog("Check Page Frame", "Please double check the inputted page frame.");
                        inputPageFrameCount.requestFocus();
                    }
                }
            }
        }
    }//GEN-LAST:event_btn_calculateMouseClicked

    private void logoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoLabelMouseClicked
        //go to about page
        AboutPage abt = new AboutPage();
        abt.setFrame_com(this);
        this.setEnabled(false);
        abt.setVisible(true);
    }//GEN-LAST:event_logoLabelMouseClicked

    private void ShowErrorDialog(String title, String message) {
        JOptionPane.showMessageDialog(null, message, title, JOptionPane.ERROR_MESSAGE);
    }

    private void SetTextFieldBorderColorToError(int[] indicator) {
        if (indicator[0] == 1) {
            inputReferenceString.setBorder(textFieldBorderError1);
        }
        if (indicator[1] == 1) {
            inputPageFrameCount.setBorder(textFieldBorderError1);
        }
    }

    private void SetTextFieldBorderColorToUnfocused() {
        inputReferenceString.setBorder(textFieldBorderUnFocused1);
        inputPageFrameCount.setBorder(textFieldBorderUnFocused1);
    }

    private void SetTextFieldBorderColorToDefaultState() {
        inputReferenceString.requestFocus();
        inputReferenceString.setBorder(textFieldBorderFocused1);
        inputPageFrameCount.setBorder(textFieldBorderUnFocused1);
    }

    //responsible for giving a TableModel that added contents to lru_TableOfExecution
    private DefaultTableModel generateTableModel(LRUComputationDataHolder data_holder) {
        int counter = 0;
        int reference_string_length = data_holder.getReference_list().size();
        //row size always page frame count + 1
        Object[][] row_content = new Object[data_holder.getPage_frame_count() + 1][];
        String[] column_headers = parseToStringArray(-1, data_holder.getReference_list(), 1, reference_string_length);

        for (Map.Entry<Integer, ArrayList<Integer>> item : data_holder.getRow_content().entrySet()) {
            if (counter < data_holder.getPage_frame_count()) {
                row_content[counter] = parseToStringArray(counter, item.getValue(), 0, reference_string_length);
            } else {
                //final row
                row_content[counter] = parseToStringArray(counter, item.getValue(), 1, reference_string_length);
                break;
            }
            counter++;
        }
        return new DefaultTableModel(row_content, column_headers);
    }

    //responsible for adding spaces on row contents and parsing to String Array
    public String[] parseToStringArray(int row_number, ArrayList<Integer> row_list, int mode, int reference_string_size) {
        ArrayList<String> main_list = new ArrayList<>();
        ArrayList<String> space_list = new ArrayList<>();

        if (mode == 0) {
            //only add space if not final row
            //row number is the size or current row minus the total reference string size
            if (row_number != 0) {
                for (int i = 0; i < reference_string_size - row_list.size(); i++) {
                    space_list.add("");
                }
            }
            main_list.addAll(space_list); //adding space on beginning
        }

        //parsing to string items
        row_list.forEach(x_item -> {
            if (isDebuggingEnabled) {
                if (mode != 0) {
                    print(x_item, 0);
                }
            }
            if (x_item < 0) {
                //is -1 or empty ID
                main_list.add(""); //add a blank space
            } else {
                main_list.add(String.valueOf(x_item));
            }
        });

        String[] returnable = new String[main_list.size()];
        for (int i = 0; i < main_list.size(); i++) {
            if (isDebuggingEnabled) {
                print(main_list.get(i) + ",", 1);
            }
            returnable[i] = main_list.get(i);
        }
        return returnable;
    }

    private void print(Object str, int mode) {
        if (mode == 0) {
            System.out.println(str);
        } else {
            System.out.print(str);
        }
    }

    private void ResetTable() {
        inputPageFaultCount.setToolTipText(null);
        if (!isAlreadyReset) {
            lru_TableOfExecution.setModel(reset_table_model);
            setResetButtonState(false);
            ResetInputs();
        }
    }

    private void ResetInputs() {
        inputReferenceString.setText("");
        isReferenceStringValid = false;
        notInReferenceValidRange = false;
        reference_string_length = 0;
        inputPageFrameCount.setText("");
        isPageFrameValid = false;
        SetTextFieldBorderColorToDefaultState();
    }

    private void setResetButtonState(boolean state) {
        if (state == false) {
            inputPageFaultCount.setText("---");
        }
        isAlreadyReset = !state;
        btn_reset.setEnabled(state);
    }

    private void initUserComponentsSet() {
        reset_table_model = new DefaultTableModel(new Object[][]{}, new Object[]{});
        cell_value_centerRenderer.setHorizontalTextPosition(JLabel.CENTER);
        int lru_FrameBorderThickness = 1;
        this.getContentPane().setBackground(new Color(46, 45, 53));
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("LOGO.png")));
        this.getRootPane().setBorder(BorderFactory.createMatteBorder(
                lru_FrameBorderThickness,
                lru_FrameBorderThickness,
                lru_FrameBorderThickness,
                lru_FrameBorderThickness,
                new Color(41, 38, 42)));
        double[] coordinates = ScreenMatrixUtility.getCenteringLocation(DEFAULT_FRAME_SIZE);
        this.setLocation((int) coordinates[0], (int) coordinates[1]);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LRUMainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LRUMainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LRUMainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LRUMainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LRUMainInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomControlPanel;
    private javax.swing.JPanel bottomPanelLineborder;
    private javax.swing.JButton btn_calculate;
    private javax.swing.JLabel btn_clearPageFrameInput;
    private javax.swing.JLabel btn_clearReferenceStringInput;
    private javax.swing.JButton btn_reset;
    private javax.swing.JPanel centerPanelForScrollingPanel;
    private javax.swing.JLabel exitButton;
    private javax.swing.JLabel inputPageFaultCount;
    private javax.swing.JTextField inputPageFrameCount;
    private javax.swing.JTextField inputReferenceString;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JTable lru_TableOfExecution;
    private javax.swing.JLabel minimizeButton;
    private javax.swing.JPanel topPanelInputArea;
    // End of variables declaration//GEN-END:variables

    //My declarations
    private final int[] DEFAULT_FRAME_SIZE = {903, 528};
    private DefaultTableCellRenderer cell_value_centerRenderer = new DefaultTableCellRenderer();

    //main text field border
    private final int LEFT_OFFSET = 5;
    private final int BOTTOM_OFFSET = 3;
    private final Border textFieldBorderFocused = BorderFactory.createLineBorder(new Color(45, 203, 202));
    private final Border textFieldBorderUnFocused = BorderFactory.createLineBorder(new Color(34, 108, 110));
    private final Border textFieldBorderError = BorderFactory.createLineBorder(new Color(255, 0, 0));
    private final Border empty = new EmptyBorder(0, LEFT_OFFSET, BOTTOM_OFFSET, 0);
    private final Border textFieldBorderFocused1 = new CompoundBorder(textFieldBorderFocused, empty);
    private final Border textFieldBorderUnFocused1 = new CompoundBorder(textFieldBorderUnFocused, empty);
    private final Border textFieldBorderError1 = new CompoundBorder(textFieldBorderError, empty);

    private int current_mouse_pos_X = 0;
    private int current_mouse_pos_Y = 0;
    private boolean isDebuggingEnabled = false;

    //empty table model
    private DefaultTableModel reset_table_model = new DefaultTableModel();
    private boolean isAlreadyReset = false;
    private boolean isReferenceStringValid = false;
    private boolean isPageFrameValid = false;
    private boolean notInReferenceValidRange = false;
    private int reference_string_length = 0;
    //End of my declarations

    @Override
    public void NotifyCaller(boolean isExited) {
        this.setEnabled(isExited);
    }

    @Override
    public void isExited(boolean b) {
        this.setEnabled(true);
        if (b) {
            System.exit(0);
        }
    }

}
